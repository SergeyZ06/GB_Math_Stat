# В результате 10 независимых измерений некоторой величины X, выполненных с одинаковой точностью,
# получены опытные данные:
# 6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1
# Предполагая, что результаты измерений подчинены нормальному закону распределения вероятностей,
# оценить истинное значение величины X при помощи доверительного интервала, покрывающего это
# значение с доверительной вероятностью 0,95.

import math


list_X = [6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1]
alpha = 0.05

# Стандартное отклонение генеральной совокупности неизвестно, поэтому нужно использовать t-критерий для альфа = 0.025
# и df = n - 1.
n = len(list_X)
# n = 10
t = 2.26216

# Вычислим оценку математического ожидания выборки:
M_X_sample = 0
for x in list_X:
    M_X_sample += x
M_X_sample = M_X_sample / n
# M_X_sample = 6.589999999999999

# Вычислим несмещенную оценку дисперсии выборки:
D_X_sample = 0
for x in list_X:
    D_X_sample += math.pow(x - M_X_sample, 2)
D_X_sample = D_X_sample / (n - 1)
# D_X_sample = 0.2032222222222223

# Вычислим Standard Error - стандартную ошибку среднего:
SE = math.sqrt(D_X_sample)
# SE = 0.4508017549014448

# Вычислим нижнюю границу доверительного интервала:
T1 = M_X_sample - t * SE / math.sqrt(n)
# T1 = 6.267515446947326

# Вычислим верхнюю границу доверительного интервала:
T2 = M_X_sample + t * SE / math.sqrt(n)
# T2 = 6.912484553052672

print(f'Доверительный интервал ({T1}; {T2}).')
# Доверительный интервал (6.267515446947326; 6.912484553052672).
