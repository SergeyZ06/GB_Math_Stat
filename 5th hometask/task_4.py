# Продавец утверждает, что средний вес пачки печенья составляет 200 г.
# Из партии извлечена выборка из 10 пачек. Вес каждой пачки составляет:
# 202, 203, 199, 197, 195, 201, 200, 204, 194, 190.
# Известно, что их веса распределены нормально.
# Верно ли утверждение продавца, если учитывать, что доверительная вероятность равна 99%?

import math


M_X = 200
list_X = [202, 203, 199, 197, 195, 201, 200, 204, 194, 190]

# H0: M_X_sample = M_X
# H1: M_X_sample <> M_X

# Дисперсия генеральной совокупности неизвестна, поэтому определим критерий Стьюдента t для альфа = 0.005
# (двусторонний тест) и df = n - 1 = 9
n = len(list_X)
# n = 10
t = 3.24984

# Вычислим оценку математического ожидания выборки:
M_X_sample = 0
for x in list_X:
    M_X_sample += x
M_X_sample = M_X_sample / n
# M_X_sample = 198.5

# Вычислим несмещенную оценку дисперсии выборки:
D_X_sample = 0
for x in list_X:
    D_X_sample += math.pow(x - M_X_sample, 2)
D_X_sample = D_X_sample / (n - 1)
# D_X_sample = 19.833333333333332

# Вычислим Standard Error - стандартную ошибку среднего:
SE = math.sqrt(D_X_sample)
# SE = 4.453463071962462

# Вычислим нижнюю границу доверительного интервала:
T1 = M_X_sample - t * SE / math.sqrt(n)
# T1 = 193.9232221249617

# Вычислим верхнюю границу доверительного интервала:
T2 = M_X_sample + t * SE / math.sqrt(n)
# T2 = 203.0767778750383

print(f'Доверительный интервал ({T1}; {T2}).')
# Доверительный интервал (193.9232221249617; 203.0767778750383).

# M_X генеральной совокупности лежит внутри вычисленного доверительного интервала, то есть внутри области принятия
# гипотезы H0. Таким образом, M_X_sample = M_X.
